package com.ritchey.choices.domain.chapel;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ScheduledEventExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public ScheduledEventExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getName());
        sb.append("[");
        sb.append("Hash = ").append(hashCode());
        sb.append(",orderByClause=").append(orderByClause);
        sb.append(",distinct=").append(distinct);
        sb.append(",oredCriteria=").append(oredCriteria);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEventIsNull() {
            addCriterion("event is null");
            return (Criteria) this;
        }

        public Criteria andEventIsNotNull() {
            addCriterion("event is not null");
            return (Criteria) this;
        }

        public Criteria andEventEqualTo(Integer value) {
            addCriterion("event =", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotEqualTo(Integer value) {
            addCriterion("event <>", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventGreaterThan(Integer value) {
            addCriterion("event >", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventGreaterThanOrEqualTo(Integer value) {
            addCriterion("event >=", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventLessThan(Integer value) {
            addCriterion("event <", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventLessThanOrEqualTo(Integer value) {
            addCriterion("event <=", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventIn(List<Integer> values) {
            addCriterion("event in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotIn(List<Integer> values) {
            addCriterion("event not in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventBetween(Integer value1, Integer value2) {
            addCriterion("event between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotBetween(Integer value1, Integer value2) {
            addCriterion("event not between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("starttime is null");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("starttime is not null");
            return (Criteria) this;
        }

        public Criteria andStarttimeEqualTo(Date value) {
            addCriterion("starttime =", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotEqualTo(Date value) {
            addCriterion("starttime <>", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThan(Date value) {
            addCriterion("starttime >", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("starttime >=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThan(Date value) {
            addCriterion("starttime <", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(Date value) {
            addCriterion("starttime <=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeIn(List<Date> values) {
            addCriterion("starttime in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotIn(List<Date> values) {
            addCriterion("starttime not in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeBetween(Date value1, Date value2) {
            addCriterion("starttime between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotBetween(Date value1, Date value2) {
            addCriterion("starttime not between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endtime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endtime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterion("endtime =", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterion("endtime <>", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterion("endtime >", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("endtime >=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterion("endtime <", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("endtime <=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterion("endtime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterion("endtime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterion("endtime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("endtime not between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andTemplateIsNull() {
            addCriterion("template is null");
            return (Criteria) this;
        }

        public Criteria andTemplateIsNotNull() {
            addCriterion("template is not null");
            return (Criteria) this;
        }

        public Criteria andTemplateEqualTo(String value) {
            addCriterion("template =", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateNotEqualTo(String value) {
            addCriterion("template <>", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateGreaterThan(String value) {
            addCriterion("template >", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateGreaterThanOrEqualTo(String value) {
            addCriterion("template >=", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateLessThan(String value) {
            addCriterion("template <", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateLessThanOrEqualTo(String value) {
            addCriterion("template <=", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateLike(String value) {
            addCriterion("template like", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateNotLike(String value) {
            addCriterion("template not like", value, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateIn(List<String> values) {
            addCriterion("template in", values, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateNotIn(List<String> values) {
            addCriterion("template not in", values, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateBetween(String value1, String value2) {
            addCriterion("template between", value1, value2, "template");
            return (Criteria) this;
        }

        public Criteria andTemplateNotBetween(String value1, String value2) {
            addCriterion("template not between", value1, value2, "template");
            return (Criteria) this;
        }

        public Criteria andRecordtardyIsNull() {
            addCriterion("recordTardy is null");
            return (Criteria) this;
        }

        public Criteria andRecordtardyIsNotNull() {
            addCriterion("recordTardy is not null");
            return (Criteria) this;
        }

        public Criteria andRecordtardyEqualTo(Boolean value) {
            addCriterion("recordTardy =", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyNotEqualTo(Boolean value) {
            addCriterion("recordTardy <>", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyGreaterThan(Boolean value) {
            addCriterion("recordTardy >", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("recordTardy >=", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyLessThan(Boolean value) {
            addCriterion("recordTardy <", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyLessThanOrEqualTo(Boolean value) {
            addCriterion("recordTardy <=", value, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyIn(List<Boolean> values) {
            addCriterion("recordTardy in", values, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyNotIn(List<Boolean> values) {
            addCriterion("recordTardy not in", values, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyBetween(Boolean value1, Boolean value2) {
            addCriterion("recordTardy between", value1, value2, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordtardyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("recordTardy not between", value1, value2, "recordtardy");
            return (Criteria) this;
        }

        public Criteria andRecordlateIsNull() {
            addCriterion("recordLate is null");
            return (Criteria) this;
        }

        public Criteria andRecordlateIsNotNull() {
            addCriterion("recordLate is not null");
            return (Criteria) this;
        }

        public Criteria andRecordlateEqualTo(Boolean value) {
            addCriterion("recordLate =", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateNotEqualTo(Boolean value) {
            addCriterion("recordLate <>", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateGreaterThan(Boolean value) {
            addCriterion("recordLate >", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("recordLate >=", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateLessThan(Boolean value) {
            addCriterion("recordLate <", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateLessThanOrEqualTo(Boolean value) {
            addCriterion("recordLate <=", value, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateIn(List<Boolean> values) {
            addCriterion("recordLate in", values, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateNotIn(List<Boolean> values) {
            addCriterion("recordLate not in", values, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateBetween(Boolean value1, Boolean value2) {
            addCriterion("recordLate between", value1, value2, "recordlate");
            return (Criteria) this;
        }

        public Criteria andRecordlateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("recordLate not between", value1, value2, "recordlate");
            return (Criteria) this;
        }

        public Criteria andAllcreditIsNull() {
            addCriterion("allcredit is null");
            return (Criteria) this;
        }

        public Criteria andAllcreditIsNotNull() {
            addCriterion("allcredit is not null");
            return (Criteria) this;
        }

        public Criteria andAllcreditEqualTo(Boolean value) {
            addCriterion("allcredit =", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditNotEqualTo(Boolean value) {
            addCriterion("allcredit <>", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditGreaterThan(Boolean value) {
            addCriterion("allcredit >", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditGreaterThanOrEqualTo(Boolean value) {
            addCriterion("allcredit >=", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditLessThan(Boolean value) {
            addCriterion("allcredit <", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditLessThanOrEqualTo(Boolean value) {
            addCriterion("allcredit <=", value, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditIn(List<Boolean> values) {
            addCriterion("allcredit in", values, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditNotIn(List<Boolean> values) {
            addCriterion("allcredit not in", values, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditBetween(Boolean value1, Boolean value2) {
            addCriterion("allcredit between", value1, value2, "allcredit");
            return (Criteria) this;
        }

        public Criteria andAllcreditNotBetween(Boolean value1, Boolean value2) {
            addCriterion("allcredit not between", value1, value2, "allcredit");
            return (Criteria) this;
        }

        public Criteria andSplitIsNull() {
            addCriterion("split is null");
            return (Criteria) this;
        }

        public Criteria andSplitIsNotNull() {
            addCriterion("split is not null");
            return (Criteria) this;
        }

        public Criteria andSplitEqualTo(Boolean value) {
            addCriterion("split =", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitNotEqualTo(Boolean value) {
            addCriterion("split <>", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitGreaterThan(Boolean value) {
            addCriterion("split >", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitGreaterThanOrEqualTo(Boolean value) {
            addCriterion("split >=", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitLessThan(Boolean value) {
            addCriterion("split <", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitLessThanOrEqualTo(Boolean value) {
            addCriterion("split <=", value, "split");
            return (Criteria) this;
        }

        public Criteria andSplitIn(List<Boolean> values) {
            addCriterion("split in", values, "split");
            return (Criteria) this;
        }

        public Criteria andSplitNotIn(List<Boolean> values) {
            addCriterion("split not in", values, "split");
            return (Criteria) this;
        }

        public Criteria andSplitBetween(Boolean value1, Boolean value2) {
            addCriterion("split between", value1, value2, "split");
            return (Criteria) this;
        }

        public Criteria andSplitNotBetween(Boolean value1, Boolean value2) {
            addCriterion("split not between", value1, value2, "split");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorIsNull() {
            addCriterion("splitByInstructor is null");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorIsNotNull() {
            addCriterion("splitByInstructor is not null");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorEqualTo(Boolean value) {
            addCriterion("splitByInstructor =", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorNotEqualTo(Boolean value) {
            addCriterion("splitByInstructor <>", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorGreaterThan(Boolean value) {
            addCriterion("splitByInstructor >", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorGreaterThanOrEqualTo(Boolean value) {
            addCriterion("splitByInstructor >=", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorLessThan(Boolean value) {
            addCriterion("splitByInstructor <", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorLessThanOrEqualTo(Boolean value) {
            addCriterion("splitByInstructor <=", value, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorIn(List<Boolean> values) {
            addCriterion("splitByInstructor in", values, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorNotIn(List<Boolean> values) {
            addCriterion("splitByInstructor not in", values, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorBetween(Boolean value1, Boolean value2) {
            addCriterion("splitByInstructor between", value1, value2, "splitbyinstructor");
            return (Criteria) this;
        }

        public Criteria andSplitbyinstructorNotBetween(Boolean value1, Boolean value2) {
            addCriterion("splitByInstructor not between", value1, value2, "splitbyinstructor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scheduledEvent
     *
     * @mbggenerated do_not_delete_during_merge Tue Sep 29 14:08:33 CDT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scheduledEvent
     *
     * @mbggenerated Tue Sep 29 14:08:33 CDT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}